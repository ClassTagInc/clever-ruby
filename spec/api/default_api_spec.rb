=begin
#Clever API

#The Clever API

OpenAPI spec version: 1.2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for CleverAPI::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = CleverAPI::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instact of DefaultApi' do
      expect(@instance).to be_instance_of(CleverAPI::DefaultApi)
    end
  end

  # unit tests for get_contact
  # Get only a specific studentcontact&#39;s information.
  # Returns a specific student contact
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [StudentContactResponse]
  describe 'get_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_contacts
  # Gets a list of student contacts you have access to.
  # Returns a list of student contacts
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [StudentContactsResponse]
  describe 'get_contacts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_contacts_for_student
  # Retrieves all contacts for a student.
  # Returns the contacts for a student
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @return [StudentContactsResponse]
  describe 'get_contacts_for_student test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_district
  # Get only a specific district&#39;s information.
  # Returns a specific district
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DistrictResponse]
  describe 'get_district test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_district_admin
  # Retrieves a district admin
  # Returns a specific district admin
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DistrictAdminResponse]
  describe 'get_district_admin test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_district_admins
  # Retrieves all users with admin access to a district.
  # Returns a list of district admins
  # @param [Hash] opts the optional parameters
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [DistrictAdminsResponse]
  describe 'get_district_admins test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_district_for_school
  # Retrieves district information for a school.
  # Returns the district for a school
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DistrictResponse]
  describe 'get_district_for_school test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_district_for_section
  # Retrieves district information for a section.
  # Returns the district for a section
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DistrictResponse]
  describe 'get_district_for_section test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_district_for_student
  # Retrieves district information for a student.
  # Returns the district for a student
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DistrictResponse]
  describe 'get_district_for_student test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_district_for_student_contact
  # Retrieves the district for a contact.
  # Returns the district for a student contact
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DistrictResponse]
  describe 'get_district_for_student_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_district_for_teacher
  # Retrieves district information for a teacher.
  # Returns the district for a teacher
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DistrictResponse]
  describe 'get_district_for_teacher test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_districts
  # Gets a list of districts you have access to.
  # Returns a list of districts
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [DistrictsResponse]
  describe 'get_districts test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_event
  # Retrieves a single event.
  # Returns the specific event
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [EventResponse]
  describe 'get_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events
  # Retrieves all events
  # Returns a list of events
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [EventsResponse]
  describe 'get_events test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events_for_school
  # Retrieves events for schools.
  # Returns a list of events for a school
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [EventsResponse]
  describe 'get_events_for_school test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events_for_school_admin
  # Retrieves events for school_admins.
  # Returns a list of events for a school admin
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [EventsResponse]
  describe 'get_events_for_school_admin test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events_for_section
  # Retrieves events for sections.
  # Returns a list of events for a section
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [EventsResponse]
  describe 'get_events_for_section test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events_for_student
  # Retrieves events for students.
  # Returns a list of events for a student
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [EventsResponse]
  describe 'get_events_for_student test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events_for_teacher
  # Retrieves events for teachers.
  # Returns a list of events for a teacher
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [EventsResponse]
  describe 'get_events_for_teacher test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_grade_levels_for_teacher
  # Retrieves a list of all grade levels taught by a specific teacher.
  # Returns the grade levels for sections a teacher teaches
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [GradeLevelsResponse]
  describe 'get_grade_levels_for_teacher test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_school
  # Get only a specific school&#39;s information.
  # Returns a specific school
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [SchoolResponse]
  describe 'get_school test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_school_admin
  # Get only a specific schooladmin&#39;s information.
  # Returns a specific school admin
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [SchoolAdminResponse]
  describe 'get_school_admin test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_school_admins
  # Gets a list of school_admins you have access to.
  # Returns a list of school admins
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [SchoolAdminsResponse]
  describe 'get_school_admins test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_school_for_section
  # Retrieves information about the school for a section
  # Returns the school for a section
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [SchoolResponse]
  describe 'get_school_for_section test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_school_for_student
  # Retrieves information about the school for a student
  # Returns the primary school for a student
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [SchoolResponse]
  describe 'get_school_for_student test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_school_for_teacher
  # Retrieves information about the school for a teacher
  # Retrieves school info for a teacher.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [SchoolResponse]
  describe 'get_school_for_teacher test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_schools
  # Gets a list of schools you have access to.
  # Returns a list of schools
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [SchoolsResponse]
  describe 'get_schools test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_schools_for_school_admin
  # Retrieves all schools for a school admin.
  # Returns the schools for a school admin
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [SchoolsResponse]
  describe 'get_schools_for_school_admin test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_section
  # Get only a specific section&#39;s information.
  # Returns a specific section
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [SectionResponse]
  describe 'get_section test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sections
  # Gets a list of sections you have access to.
  # Returns a list of sections
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [SectionsResponse]
  describe 'get_sections test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sections_for_school
  # Retrieves a list of all sections for a specific school.
  # Returns the sections for a school
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [SectionsResponse]
  describe 'get_sections_for_school test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sections_for_student
  # Retrieves a list of all sections for a student.
  # Returns the sections for a student
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [SectionsResponse]
  describe 'get_sections_for_student test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_sections_for_teacher
  # Retrieves a list of all sections for a teacher.
  # Returns the sections for a teacher
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [SectionsResponse]
  describe 'get_sections_for_teacher test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_student
  # Get only a specific student&#39;s information.
  # Returns a specific student
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [StudentResponse]
  describe 'get_student test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_student_for_contact
  # Retrieves the student for a contact.
  # Returns the student for a student contact
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [StudentResponse]
  describe 'get_student_for_contact test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_students
  # Gets a list of students you have access to.
  # Returns a list of students
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [StudentsResponse]
  describe 'get_students test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_students_for_school
  # Retrieves a list of all students for a specific school.
  # Returns the students for a school
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [StudentsResponse]
  describe 'get_students_for_school test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_students_for_section
  # Retrieves a list of all the section&#39;s students.
  # Returns the students for a section
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [StudentsResponse]
  describe 'get_students_for_section test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_students_for_teacher
  # Retrieves all students that a teacher has in their sections.
  # Returns the students for a teacher
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [StudentsResponse]
  describe 'get_students_for_teacher test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_teacher
  # Get only a specific teacher&#39;s information.
  # Returns a specific teacher
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [TeacherResponse]
  describe 'get_teacher test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_teacher_for_section
  # Retrieves information about the primary teacher of a section.
  # Returns the primary teacher for a section
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [TeacherResponse]
  describe 'get_teacher_for_section test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_teachers
  # Gets a list of teachers you have access to.
  # Returns a list of teachers
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [TeachersResponse]
  describe 'get_teachers test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_teachers_for_school
  # Retrieves a list of all teachers for a specific school.
  # Returns the teachers for a school
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [TeachersResponse]
  describe 'get_teachers_for_school test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_teachers_for_section
  # Retrieves a list of all the section&#39;s teachers.
  # Returns the teachers for a section
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [TeachersResponse]
  describe 'get_teachers_for_section test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_teachers_for_student
  # Retrieves all teachers for a student.
  # Returns the teachers for a student
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 
  # @option opts [String] :starting_after 
  # @option opts [String] :ending_before 
  # @return [TeachersResponse]
  describe 'get_teachers_for_student test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
